<%
	 if defined?(componentIndex) # Then we're working with a component
		 prefix = "component_#{componentIndex}_"
     htmlOpen = "<tr><td>%s</td><td><ul>"
     htmlClose = '</ul></td></tr>'
	 else # We're working with an object or collection
		 prefix = ''
		 htmlOpen = "<dt>%s</dt>"
     htmlOpen_l = '<ul><dd>'
		 htmlClose_l = '</ul></dd>'
	 end

     if defined?(@facet_collection_resp)
        facet_collection_names = []
        @facet_collections = @facet_collection_resp[0].facet_counts["facet_fields"]["collection_sim"]
        if !@facet_collections.nil? && @facet_collections.length > 0
            @facet_collections.each_slice(2) do |collectionName, *_|
                facet_collection_names << collectionName.strip if !collectionName.strip.eql? @document['title_tesim'].first.strip.to_s
            end

            if facet_collection_names.count > 0
                htmlOpen %= 'Collection'.pluralize(facet_collection_names.count)
                concat htmlOpen.html_safe
                facet_collection_names.sort.each do |collectionName|
                  concat htmlOpen_l.html_safe unless defined?(componentIndex)
 %>
                  <li>
                      <%= link_to( dams_collection_path(@collections_map[collectionName]) ) do %>
                          <%= collectionName %>
                      <% end %>
                  </li>
<%                concat htmlClose_l.html_safe unless defined?(componentIndex)
                end 
                concat htmlClose.html_safe if defined?(componentIndex) 
            end
        end
     else
       fieldData = @document["#{prefix}collection_json_tesim"] || []
       fieldData.concat( @document['provenanceCollection_json_tesim'] || [] )
       fieldData.concat( @document['part_json_tesim'] || [] )
       fieldData.concat( @document['assembledCollection_json_tesim'] || [] )

       if fieldData.length > 0

		 htmlOpen %= 'Collection'.pluralize(fieldData.count)
		 concat htmlOpen.html_safe

		 fieldData.each do |datum|
           collection = JSON.parse(datum)
		   collectionName = (collection['name'] == '') ? 'MISSING_COLLECTION_NAME' : collection['name'] # TEMP FIX FOR MISSING COLLECTION NAME
           thumb = collection['thumbnail']
           visibility = collection['visibility']

           # Check anonymous user for linked collection access 
           anons = User.anonymous(request.remote_ip)
           if current_user != nil || visibility == 'public' || visibility == anons
            concat htmlOpen_l.html_safe unless defined?(componentIndex)
%>
        		<li>
        			<%= link_to( dams_collection_path(collection['id']) ) do %>
        				<%= collectionName %>
        			<% end %>
        		</li>
<%          concat htmlClose_l.html_safe unless defined?(componentIndex)
           end
          concat htmlClose.html_safe if defined?(componentIndex)
      end
    end


	 
	 

	 end
%>

